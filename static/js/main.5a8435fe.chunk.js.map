{"version":3,"sources":["components/Navbar/navbar.js","components/jumbotron/jumbotron.js","components/Row/row.js","components/Card/card.js","components/Wrapper/wrapper.js","App.js","index.js"],"names":["Title","props","className","id","gameStatus","score","topScore","Jumbotron","Row","children","Card","src","image","status","clicked","onClick","turnTrue","alt","name","Wrapper","App","state","Pokemon","Score","console","log","card","document","getElementById","cardStatus","getAttribute","setAttribute","cardIsFalse","allCardsArr","getElementsByClassName","i","length","cardIsTrue","classList","add","setTimeout","remove","shuffle","setState","newScore","winGame","flash","setInterval","clearInterval","array","j","temporary","Math","floor","random","this","map","monster","key","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.5a8435fe.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Title(props) {\n\n    return(\n\n        <div>\n            <nav className=\"nav-shadow navbar mb-0 fixed-top\">\n                <ul>\n                    <li className=\"navbar-brand nav-item mr-0 mb-0 pb-0 font-weight-bold text-light\">PokeMemory</li>\n                    <li id=\"game-status\" className=\"status nav-item navbar-brand mr-0\">{props.gameStatus}</li>\n                    <li className=\"text-light nav-item score navbar-brand mt-0\">Score: {props.score} | Top Score: {props.topScore}</li>\n                </ul>\n            </nav> \n        </div>\n\n    );\n}\n\n\nexport default Title;","import React from 'react';\nimport './style.css';\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron mt-5 jumbotron-fluid\">\n  <div className=\"container\">\n    <h1 className=\"display-4 text-center text-light title font-weight-bold\">PokeMemory!</h1>\n    <p className=\"lead text-center text-light rules\">Click A Card To Earn Points. Click An Image More Than Once And You'll Start Over!</p>\n  </div>\n        </div>\n    )\n    \n}\n\nexport default Jumbotron;","import React from 'react';\n\nfunction Row(props) {\n    return  <div className=\"row\">{props.children}</div>\n    \n};\n\nexport default Row;","import React from \"react\"\nimport './style.css';\n\n\n\nfunction Card(props) {\n    return(\n      <img src={props.image} status={props.clicked} id={props.id} onClick={() => props.turnTrue(props.id)}  alt={props.name} className=\"col-2 img-thumbnail m-2 pokemon\"/>\n    )\n}\n\nexport default Card;","import React from 'react';\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper container mb-5 mt-5\">{props.children}</div>\n}\n\nexport default Wrapper;","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/navbar';\nimport Jumbotron from './components/jumbotron/jumbotron';\n// import Container from './components/container/container';\nimport Row from './components/Row/row';\nimport Card from './components/Card/card';\nimport Wrapper from './components/Wrapper/wrapper';\nimport Pokemon from './pokemon.json';\n// import { all } from 'q';\n\nclass App extends Component {\n  state = {\n    Pokemon,\n    Score: 0,\n\ttopScore: 0,\n\tgameStatus: 'Click A Card To Start!'\n  };\n\n\n// A function that will make the selected cards clicked property true\n  turnTrue = id => {\n\tconsole.log(id)\n    const card = document.getElementById(`${id}`);\n    const cardStatus = card.getAttribute(\"status\");\n\n    if ( cardStatus === \"false\") {\n    \tcard.setAttribute(\"status\", \"true\");\n  \t\tthis.cardIsFalse();\n    }\n\telse if (cardStatus === \"true\") {\n    \tconst allCardsArr = document.getElementsByClassName(\"pokemon\");\n    \tfor (let i = 0; i < allCardsArr.length; i++) {\n    \t\tallCardsArr[i].setAttribute(\"status\", \"false\")\n    \t};\n  \t\tthis.cardIsTrue()\n\t}\n};\n// ------My thoughts-------//\n//When any card is clicked, check if it is false, if clicked is false, turn it true add to the score and randomly order the cards.\n//if clicked is true when the card is clicked, then reset the score, set all cards to false, and reorder them.\n //-----------------------//\n    cardIsTrue = () => {\n\t\tconst status = document.getElementById('game-status');\n\t\tstatus.classList.add('yellow')\n\t\tsetTimeout(() => status.classList.remove('yellow'), 500)\n    \tthis.shuffle(Pokemon);\n      \tthis.setState({\n\t\tScore: 0,\n\t\tgameStatus: 'Bad Guess! Try Again.'\n      \t});\n    };\n\n    cardIsFalse = () => {\n\t\tconst status = document.getElementById('game-status');\n\t\tstatus.classList.add('green')\n\t\tsetTimeout(() => status.classList.remove('green'), 500)\n\t\tlet newScore = this.state.Score + 1;\n\t\tthis.setState({\n\t\t\tScore: newScore,\n\t\t\tgameStatus: 'Good Guess!'\n\t\t});\n\t\tif (newScore > this.state.topScore) { this.setState({topScore: newScore}) }\n\n\t\tif (newScore === 15) {this.winGame()}\n\n\t\tthis.shuffle(Pokemon);\n\t};\n\n\twinGame = () => {\n\t\tthis.setState({\n\t\t\tgameStatus: 'YOU WIN!!!'\n\t\t});\n\t\tconst status = document.getElementById('game-status');\n\t\tconst flash = setInterval(() => {\n\t\t\t\tstatus.classList.add('green');\n\t\t\t\tsetTimeout(() => status.classList.remove('green'), 500);\n\t\t\t}, 1000);\n\n\t\tconst allCardsArr = document.getElementsByClassName(\"pokemon\");\n\t\t\tfor (let i = 0; i < allCardsArr.length; i++) {\n\t\t\t\tallCardsArr[i].setAttribute(\"status\", \"false\")\n\t\t\t};\t\n\t\t\t\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({Score: 0})\n\t\t\tclearInterval(flash)\n\t\t}, 3100);\n\t};\n\n  \t//This will shuffle the cards/pokemon. Credits to Fisher Yates algorithm \n  \tshuffle = (array) => {\n    \tlet i = array.length, j, temporary;\n    \twhile(i-- > 0) {\n      \t\tj = Math.floor(Math.random() * (i));//decimal * array length -> rounded down to the nearest whole number\n      \t\ttemporary = array[j];\n      \t\tarray[j] = array[i];\n      \t\tarray[i] = temporary;\n    \t};\n  \t};\n  \n\n  render() {\n    return (\n      <div>\n        <Navbar\n        score={this.state.Score}\n\t\ttopScore={this.state.topScore}\n\t\tgameStatus={this.state.gameStatus}\n\t\t/>\n        <Jumbotron />\n        <Wrapper>\n          <Row>\n          {this.state.Pokemon.map(monster => (\n            <Card \n                  turnTrue={this.turnTrue}\n                  key={monster.id} \n                  image={monster.image}     \n                  name={monster.name}\n                  clicked={monster.clicked}\n                  id={monster.id}\n                  />\n          ))}\n          </Row>\n        </Wrapper>\n      </div>\n      \n    );\n  }\n}\n\n \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}